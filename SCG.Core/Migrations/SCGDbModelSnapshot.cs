// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SCG.Core.Database;

namespace SCG.Core.Migrations
{
    [DbContext(typeof(SCGDb))]
    partial class SCGDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SCG.Core.Database.Entities.BalanceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId");

                    b.Property<int>("Costo");

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Balance");

                    b.HasData(
                        new { Id = 1, CategoriaId = 1, Costo = 85000, Descripcion = "Primera Quincena", Fecha = new DateTime(2021, 2, 20, 16, 35, 14, 556, DateTimeKind.Local) },
                        new { Id = 2, CategoriaId = 2, Costo = 9000, Descripcion = "Pago de Reparaciones", Fecha = new DateTime(2021, 2, 25, 16, 35, 14, 557, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("SCG.Core.Database.Entities.CategoriaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<int>("TipoCategoriaId");

                    b.HasKey("Id");

                    b.HasIndex("TipoCategoriaId");

                    b.ToTable("Categoria");

                    b.HasData(
                        new { Id = 1, Nombre = "Sueldo", TipoCategoriaId = 1 },
                        new { Id = 2, Nombre = "Gasto Mensuales", TipoCategoriaId = 2 },
                        new { Id = 3, Nombre = "Gasto Diarios", TipoCategoriaId = 2 }
                    );
                });

            modelBuilder.Entity("SCG.Core.Database.Entities.TipoCategoriaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TipoCategoria");

                    b.HasData(
                        new { Id = 1, Descripcion = "Ingreso" },
                        new { Id = 2, Descripcion = "Gasto" }
                    );
                });

            modelBuilder.Entity("SCG.Core.Database.Entities.BalanceEntity", b =>
                {
                    b.HasOne("SCG.Core.Database.Entities.CategoriaEntity", "Categoria")
                        .WithMany("Balances")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCG.Core.Database.Entities.CategoriaEntity", b =>
                {
                    b.HasOne("SCG.Core.Database.Entities.TipoCategoriaEntity", "TipoCategoria")
                        .WithMany("Categorias")
                        .HasForeignKey("TipoCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
